<UserControl x:Class="VisualHg.Controls.PendingChangesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:v="clr-namespace:VisualHg.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="610"
             d:DataContext="{d:DesignInstance Type=v:DesignTimePendingChangesViewMode, IsDesignTimeCreatable=True}"
             UseLayoutRounding="True">

    <UserControl.Resources>
        <SolidColorBrush x:Key="HeaderBorderBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.HeaderBorderColorKey}}"/>
        <SolidColorBrush x:Key="HeaderBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.HeaderColorKey}}"/>
        <SolidColorBrush x:Key="HeaderMouseDownBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.HeaderMouseDownColorKey}}"/>
        <SolidColorBrush x:Key="HeaderMouseDownTextBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.HeaderMouseDownTextColorKey}}"/>
        <SolidColorBrush x:Key="HeaderMouseOverBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.HeaderMouseOverColorKey}}"/>
        <SolidColorBrush x:Key="HeaderTextBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.HeaderTextColorKey}}"/>
        <SolidColorBrush x:Key="HighlightBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.HighlightColorKey}}"/>
        <SolidColorBrush x:Key="HighlightTextBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.HighlightTextColorKey}}"/>
        <SolidColorBrush x:Key="InactiveSelectionHighlightBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.InactiveSelectionHighlightColorKey}}"/>
        <SolidColorBrush x:Key="InactiveSelectionHighlightTextBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.InactiveSelectionHighlightTextColorKey}}"/>
        <SolidColorBrush x:Key="MenuBorderBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.MenuBorderColorKey}}"/>
        <SolidColorBrush x:Key="MenuBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.MenuColorKey}}"/>
        <SolidColorBrush x:Key="MenuHighlightBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.MenuHighlightColorKey}}"/>
        <SolidColorBrush x:Key="MenuHighlightTextBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.MenuHighlightTextColorKey}}"/>
        <SolidColorBrush x:Key="WindowBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.WindowColorKey}}"/>
        <SolidColorBrush x:Key="WindowTextBrush" Color="{DynamicResource {x:Static v:EnvironmentColors.WindowTextColorKey}}"/>

        <v:StatusImageConverter x:Key="StatusImageConverter" />
        <v:FileTypeImageConverter x:Key="FileTypeImageConverter" />

        <Style x:Key="FocusStyle">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="0,0,0,-1" StrokeThickness="1" Stroke="{StaticResource HighlightBrush}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border Name="Border" Height="22" SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                    <ColumnDefinition Width="*" MinWidth="150" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter ContentSource="Icon"
                                                  Margin="5,0,14,0"
                                                  Width="16" Height="Auto"
                                                  VerticalAlignment="Center" 
                                                  SnapsToDevicePixels="True" />
                                <TextBlock Name="Header" Grid.Column="1" 
                                           Text="{TemplateBinding Header}" 
                                           Foreground="{StaticResource WindowTextBrush}"
                                           VerticalAlignment="Center" 
                                           SnapsToDevicePixels="True"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource MenuHighlightBrush}"/>
                                <Setter TargetName="Header" Property="Foreground" Value="{StaticResource MenuHighlightTextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ContextMenu}" TargetType="ContextMenu">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Border BorderThickness="1" Padding="2"
                                BorderBrush="{StaticResource MenuBorderBrush}" 
                                Background="{StaticResource MenuBrush}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{StaticResource WindowBrush}" />
            <Setter Property="Foreground" Value="{StaticResource WindowTextBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <EventSetter Event="SelectionChanged" Handler="OnListViewSelectionChanged" />
            <EventSetter Event="KeyDown" Handler="OnListViewKeyDown" />
        </Style>

        <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Width="12" Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid>
                            <Border Height="24" Margin="-2,0,0,0" Padding="10,0,0,0" BorderThickness="0,0,1,1" 
                                    BorderBrush="{StaticResource HeaderBorderBrush}" 
                                    Background="{TemplateBinding Background}">
                                <DockPanel>
                                    <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path Name="SortingIcon" Fill="Gray" Margin="10,0,0,0" 
                                          SnapsToDevicePixels="True"
                                          HorizontalAlignment="Left" VerticalAlignment="Center" />
                                </DockPanel>
                            </Border>
                            <Thumb x:Name="PART_HeaderGripper"
                                   HorizontalAlignment="Right"
                                   Margin="0,0,-6,0"
                                   Style="{StaticResource GridViewColumnHeaderGripper}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="v:AttachedProperty.SortDirection" Value="{x:Null}">
                                <Setter TargetName="SortingIcon" Property="Data" Value=""/>
                            </Trigger>
                            <Trigger Property="v:AttachedProperty.SortDirection" Value="Ascending">
                                <Setter TargetName="SortingIcon" Property="Data" Value="M 0 5 L 4.5 0 L 9 5 Z"/>
                            </Trigger>
                            <Trigger Property="v:AttachedProperty.SortDirection" Value="Descending">
                                <Setter TargetName="SortingIcon" Property="Data" Value="M 0 0 L 4.5 5 L 9 0 Z"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource HeaderMouseOverBrush}"/>
                                <Setter TargetName="SortingIcon" Property="Fill" Value="{StaticResource WindowTextBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource HeaderMouseDownBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource HeaderMouseDownTextBrush}"/>
                                <Setter TargetName="SortingIcon" Property="Fill" Value="{StaticResource HeaderMouseDownTextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{StaticResource HeaderBrush}" />
            <Setter Property="Foreground" Value="{StaticResource HeaderTextBrush}" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>

        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Margin="0,0,0,-1"
                                Padding="4,0,0,1"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="17" />
                                </Grid.RowDefinitions>
                                <GridViewRowPresenter VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource HighlightTextBrush}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{StaticResource InactiveSelectionHighlightBrush}" />
                                <Setter Property="Foreground" Value="{StaticResource InactiveSelectionHighlightTextBrush}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusStyle}" />
            <Setter Property="Foreground" Value="{StaticResource WindowTextBrush}"/>
            <EventSetter Event="MouseDoubleClick" Handler="OpenSelectedFiles"/>
        </Style>

        <DataTemplate x:Key="FileNameTemplate">
            <DockPanel>
                <Image Source="{Binding Status, Converter={StaticResource StatusImageConverter}}" Width="7" Height="16"/>
                <Image Source="{Binding FullName, Converter={StaticResource FileTypeImageConverter}}" Width="auto" Height="16"/>
                <TextBlock Text="{Binding ShortName}" Margin="4,0,0,0"/>
            </DockPanel>
        </DataTemplate>
    </UserControl.Resources>

    <DockPanel>
        <ListView Name="listView" ItemsSource="{Binding}" GridViewColumnHeader.Click="OnListViewColumnHeaderClick" Thumb.DragDelta="OnColumnThumbDragDelta">
            <ListView.ContextMenu>
                <ContextMenu Name="contextMenu">
                    <MenuItem Name="openMenuItem" Header="Open" Click="OpenSelectedFiles" />
                    <MenuItem Name="commitMenuItem" Header="Commit" Click="ShowCommitWindow" />
                    <MenuItem Name="diffMenuItem" Header="Diff" Click="ShowDiffWindow" />
                    <MenuItem Name="revertMenuItem" Header="Revert" Click="ShowRevertWindow" />
                    <MenuItem Name="historyMenuItem" Header="History" Click="ShowHistoryWindow" />
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.View>
                <GridView>
                    <GridViewColumn Width="150" Header="File Name" CellTemplate="{StaticResource FileNameTemplate}" />
                    <GridViewColumn Width="100" Header="Status" DisplayMemberBinding="{Binding Status}" />
                    <GridViewColumn Width="100" Header="Root" DisplayMemberBinding="{Binding RootName}" />
                    <GridViewColumn Width="250" Header="Path" DisplayMemberBinding="{Binding Name}" />
                </GridView>
            </ListView.View>
        </ListView>
    </DockPanel>
</UserControl>
